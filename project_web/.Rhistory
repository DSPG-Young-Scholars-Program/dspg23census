geom_smooth(method = lm) #+
# Add statistical information about the trendline, position it in the plot
#stat_poly_eq(use_label(c("R2", "p", "n")),
#           label.x = 20,
#         label.y = 90)
tract_ca_la <- merge(poverty_ca_la, health_ca_la)
View(tract_ca_la)
tract_ca_la <- merge(poverty_ca_la, health_ca_la, by.x="NAME")
tract_ca_la <- merge(poverty_ca_la, health_ca_la, by="NAME")
plot(estimate.x, estimate.y,
xlab="poverty", ylab="health insurance", pch=19)
plot(tract_ca_la.estimate.x, tract_ca_la.estimate.y,
xlab="poverty", ylab="health insurance", pch=19)
plot(tract_ca_la['estimate.x'], tract_ca_la['estimate.y'],
xlab="poverty", ylab="health insurance", pch=19)
library(ggplot2)
plot(tract_ca_la['estimate.x'], tract_ca_la['estimate.y'],
xlab="poverty", ylab="health insurance", pch=19)
library(ggplot2)
ggplot(tract_ca_la, aes(x = estimate.x , y= estimate.y)
library(ggplot2)
ggplot(tract_ca_la, aes(x = estimate.x , y= estimate.y))
library(ggplot2)
ggplot(tract_ca_la, aes(x = estimate.x , y= estimate.y)) + geom_point()
library(ggplot2)
ggplot(tract_ca_la, aes(x = estimate.x , y= estimate.y)) + geom_point() + xlab("poverty") + ylab("health insurance")
library(ggplot2)
ggplot(tract_ca_la, aes(x = estimate.x , y= estimate.y)) + geom_point() + xlab("poverty") + ylab("health insurance") + ggtitle("Plot of Poverty VS Health Insurance in LA")
ggplotly(p=ggplot2::last_plot())
install.packages("ggplotly")
install.packages("plotly")
install.packages("plotly")
library(plotly)
ggplotly(p=ggplot2::last_plot())
install.packages(c("plotly", "ggplot2"))
install.packages(c("plotly", "ggplot2"))
library(ggplot2)
ggscatter <- ggplot(tract_ca_la, aes(x = estimate.x , y= estimate.y)) + geom_point() + xlab("poverty") + ylab("health insurance") + ggtitle("Plot of Poverty VS Health Insurance in LA")
library(ggplot2)
ggscatter <- ggplot(tract_ca_la, aes(x = estimate.x , y= estimate.y)) + geom_point() + xlab("poverty") + ylab("health insurance") + ggtitle("Plot of Poverty VS Health Insurance in LA")
ggscatter
library(plotly)
install.packages(c("plotly", "ggplot2"))
install.packages(c("plotly", "ggplot2"))
install.packages(c("plotly", "ggplot2"))
install.packages(c("plotly", "ggplot2"))
install.packages(c("plotly", "ggplot2"))
knitr::opts_chunk$set(echo = TRUE)
library(plotly)
library(ggplot2)
ggplotly(ggscatter)
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = "NAME")
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = tract_ca_la."NAME")
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = tract_ca_la["NAME"])
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = c("x","y", "NAME")
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = c("x","y")
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = c("x","y"))
library(ggplot2)
ggscatter <- ggplot(tract_ca_la, aes(x = estimate.x , y= estimate.y)) + geom_point() + xlab("number of people below poverty income level") + ylab("health insurance") + ggtitle("Plot of Poverty VS Health Insurance in LA")
ggscatter
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = c("x","y"))
library(acs)
library(tidycensus)
library(tidyverse)
census_api_key('0e4ce055fa07bd655685e8b6a263b33fb6731de4', install = TRUE, overwrite=TRUE)
health_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(health_insurance="B992701_002"),  county ="Los Angeles", state = "CA")
pop_ca_county <- get_acs(geography = "county", year=2021, survey="acs5", variables = c(population="B01001_001"), state = "CA")
poverty_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(poverty="B17001_001"),  county ="Los Angeles", state = "CA")
tract_ca_la <- merge(poverty_ca_la, health_ca_la, by="NAME")
library(ggplot2)
ggscatter <- ggplot(tract_ca_la, aes(x = estimate.x , y= estimate.y)) + geom_point() + xlab("number of people below poverty income level") + ylab("health insurance") + ggtitle("Plot of Poverty VS Health Insurance in LA")
ggscatter
library(ggplot2)
ggscatter <- ggplot(tract_ca_la, aes(x = estimate.x , y= estimate.y)) + geom_point() + xlab("number of people below poverty income level") + ylab("number of people with health insurance") + ggtitle("Plot of Poverty VS Health Insurance in LA")
ggscatter
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = c("x","y"))
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = "NAME")
library(ggplot2)
ggscatter <- ggplot(tract_ca_la, aes(x = estimate.x , y= estimate.y, label = NAME)) + geom_point() + xlab("number of people below poverty income level") + ylab("number of people with health insurance") + ggtitle("Plot of Poverty VS Health Insurance in LA")
ggscatter
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = label)
library(ggplot2)
ggscatter <- ggplot(tract_ca_la, aes(x = estimate.x , y= estimate.y, label = NAME)) + geom_point() + xlab("number of people below poverty income level") + ylab("number of people with health insurance") + ggtitle("Plot of Poverty VS Health Insurance in LA")
ggscatter
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = "label")
poverty_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(poverty="B05010_001"),  county ="Los Angeles", state = "CA")
tract_ca_la <- merge(poverty_ca_la, health_ca_la, by="NAME")
library(ggplot2)
ggscatter <- ggplot(tract_ca_la, aes(x = estimate.x , y= estimate.y, label = NAME)) + geom_point() + xlab("number of people below poverty income level") + ylab("number of people with health insurance") + ggtitle("Plot of Poverty VS Health Insurance in LA")
ggscatter
poverty_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(poverty="B17001_001"),  county ="Los Angeles", state = "CA")
tract_ca_la <- merge(poverty_ca_la, health_ca_la, by="NAME")
library(ggplot2)
ggscatter <- ggplot(tract_ca_la, aes(x = estimate.x , y= estimate.y, label = NAME)) + geom_point() + xlab("number of people below poverty income level") + ylab("number of people with health insurance") + ggtitle("Plot of Poverty VS Health Insurance in LA")
ggscatter
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = "label")
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = c("x" + "y"+ "label")
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = c("x","y", "label")
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = c("x","y", "label"))
library(acs)
library(tidycensus)
library(tidyverse)
census_api_key('0e4ce055fa07bd655685e8b6a263b33fb6731de4', install = TRUE, overwrite=TRUE)
health_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(health_insurance="B992701_002"/"B992701_001"),  county ="Los Angeles", state = "CA")
library(acs)
library(tidycensus)
library(tidyverse)
census_api_key('0e4ce055fa07bd655685e8b6a263b33fb6731de4', install = TRUE, overwrite=TRUE)
health_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(health_insurance="B992701_002"//"B992701_001"),  county ="Los Angeles", state = "CA")
poverty_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(poverty="B17001_002"),  county ="Los Angeles", state = "CA")
tract_ca_la <- merge(poverty_ca_la, health_ca_la, by="NAME")
library(ggplot2)
ggscatter <- ggplot(tract_ca_la, aes(x = estimate.x , y= estimate.y, label = NAME)) + geom_point() + xlab("number of people below poverty income level") + ylab("number of people with health insurance") + ggtitle("Plot of Poverty VS Health Insurance in LA")
ggscatter
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = c("x","y", "label"))
library(acs)
library(tidycensus)
library(tidyverse)
census_api_key('0e4ce055fa07bd655685e8b6a263b33fb6731de4', install = TRUE, overwrite=TRUE)
health_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(health_insurance=("B992701_002" / "B992701_001")),  county ="Los Angeles", state = "CA")
library(acs)
library(tidycensus)
library(tidyverse)
census_api_key('0e4ce055fa07bd655685e8b6a263b33fb6731de4', install = TRUE, overwrite=TRUE)
health_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(no_health_insurance="B992701_002", total="B992701_001"),  county ="Los Angeles", state = "CA")
library(acs)
library(tidycensus)
library(tidyverse)
census_api_key('0e4ce055fa07bd655685e8b6a263b33fb6731de4', install = TRUE, overwrite=TRUE)
health_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(no_health_insurance="B992701_002", total="B992701_001", percentage = no_health_insurance/total),  county ="Los Angeles", state = "CA")
health_ca_la["percentage"] = health_ca_la["no_health_insurance"]/health_ca_la["total"]
library(acs)
library(tidycensus)
library(tidyverse)
census_api_key('0e4ce055fa07bd655685e8b6a263b33fb6731de4', install = TRUE, overwrite=TRUE)
nohealth_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(no_health_insurance="B992701_002"),  county ="Los Angeles", state = "CA")
totalhealth_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(total="B992701_001"),  county ="Los Angeles", state = "CA")
library(acs)
library(tidycensus)
library(tidyverse)
census_api_key('0e4ce055fa07bd655685e8b6a263b33fb6731de4', install = TRUE, overwrite=TRUE)
nohealth_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(no_health_insurance="B992701_002"),  county ="Los Angeles", state = "CA")
totalhealth_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(total="B992701_001"),  county ="Los Angeles", state = "CA")
View(totalhealth_ca_la)
View(nohealth_ca_la)
health_ca_la <- merge(nohealth_ca_la, totalhealth_ca_la, by="NAME")
View(health_ca_la)
health_ca_la <- merge(nohealth_ca_la, totalhealth_ca_la, by="NAME")
temp <- health_ca_la
temp$percent <- temp$estimate.x / temp$estimate.y
View(temp)
health_ca_la <- merge(nohealth_ca_la, totalhealth_ca_la, by="NAME")
healthtemp <- health_ca_la
healthtemp$percent <- temp$estimate.x / temp$estimate.y
View(healthtemp)
poverty_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(poverty="B17001_002"),  county ="Los Angeles", state = "CA")
totalpoverty_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(poverty="B17001_001"),  county ="Los Angeles", state = "CA")
inpoverty_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(poverty="B17001_002"),  county ="Los Angeles", state = "CA")
totalpoverty_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(poverty="B17001_001"),  county ="Los Angeles", state = "CA")
health_ca_la <- merge(nohealth_ca_la, totalhealth_ca_la, by="NAME")
healthtemp <- health_ca_la
healthtemp$percent <- temp$estimate.x / temp$estimate.y
health_ca_la <- merge(nohealth_ca_la, totalhealth_ca_la, by="NAME")
healthtemp <- health_ca_la
healthtemp$percent <- healthtemp$estimate.x / healthtemp$estimate.y
inpoverty_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(poverty="B17001_002"),  county ="Los Angeles", state = "CA")
totalpoverty_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(poverty="B17001_001"),  county ="Los Angeles", state = "CA")
poverty_ca_la <- merge(inpoverty_ca_la, totalpoverty_ca_la, by="NAME")
povertytemp <- poverty_ca_la
povertytemp$percent <- povertytemp$estimate.x / povertytemp$estimate.y
View(povertytemp)
tract_ca_la <- merge(povertytemp, healthtemp, by="NAME")
health_ca_la <- merge(nohealth_ca_la, totalhealth_ca_la, by="NAME")
healthtemp <- health_ca_la
healthtemp$healpercent <- healthtemp$estimate.x / healthtemp$estimate.y
inpoverty_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(poverty="B17001_002"),  county ="Los Angeles", state = "CA")
totalpoverty_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(poverty="B17001_001"),  county ="Los Angeles", state = "CA")
poverty_ca_la <- merge(inpoverty_ca_la, totalpoverty_ca_la, by="NAME")
povertytemp <- poverty_ca_la
povertytemp$povpercent <- povertytemp$estimate.x / povertytemp$estimate.y
library(ggplot2)
ggscatter <- ggplot(tract_ca_la, aes(x = povpercent , y= healpercent, label = NAME)) + geom_point() + xlab("percent of poverty") + ylab("percent of insuranced") + ggtitle("Plot of Poverty VS Health Insurance in LA")
ggscatter
inpoverty_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(poverty="B17001_002"),  county ="Los Angeles", state = "CA")
totalpoverty_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(poverty="B17001_001"),  county ="Los Angeles", state = "CA")
poverty_ca_la <- merge(inpoverty_ca_la, totalpoverty_ca_la, by="NAME")
povertytemp <- poverty_ca_la
povertytemp$povpercent <- povertytemp$estimate.x / povertytemp$estimate.y
tract_ca_la <- merge(povertytemp, healthtemp, by="NAME")
library(ggplot2)
ggscatter <- ggplot(tract_ca_la, aes(x = povpercent , y= healpercent, label = NAME)) + geom_point() + xlab("percent of poverty") + ylab("percent of insuranced") + ggtitle("Plot of Poverty VS Health Insurance in LA")
ggscatter
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = c("x","y", "label"))
library(acs)
library(tidycensus)
library(tidyverse)
census_api_key('0e4ce055fa07bd655685e8b6a263b33fb6731de4', install = TRUE, overwrite=TRUE)
hashealth_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(no_health_insurance="B992701_002"),  county ="Los Angeles", state = "CA")
totalhealth_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(total="B992701_001"),  county ="Los Angeles", state = "CA")
health_ca_la <- merge(hashealth_ca_la, totalhealth_ca_la, by="NAME")
healthtemp <- health_ca_la
healthtemp$healpercent <- healthtemp$estimate.x / healthtemp$estimate.y
pop_ca_county <- get_acs(geography = "county", year=2021, survey="acs5", variables = c(population="B01001_001"), state = "CA")
inpoverty_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(poverty="B17001_002"),  county ="Los Angeles", state = "CA")
totalpoverty_ca_la <- get_acs(geography = "tract", year=2021, survey="acs5", variables = c(poverty="B17001_001"),  county ="Los Angeles", state = "CA")
poverty_ca_la <- merge(inpoverty_ca_la, totalpoverty_ca_la, by="NAME")
povertytemp <- poverty_ca_la
povertytemp$povpercent <- povertytemp$estimate.x / povertytemp$estimate.y
tract_ca_la <- merge(povertytemp, healthtemp, by="NAME")
library(ggplot2)
ggscatter <- ggplot(tract_ca_la, aes(x = povpercent , y= healpercent, label = NAME)) + geom_point() + xlab("percent of poverty") + ylab("percent of insuranced") + ggtitle("Plot of Poverty VS Health Insurance in LA")
ggscatter
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = c("x","y", "label"))
library(ggplot2)
ggscatter <- ggplot(tract_ca_la, aes(x = povpercent , y= healpercent, label = NAME)) + geom_point() + xlab("percent of poverty") + ylab("percent of having health insurance") + ggtitle("Plot of Poverty VS Health Insurance in LA")
ggscatter
library(plotly)
library(ggplot2)
ggplotly(ggscatter, tooltip = c("x","y", "label"))
install library(sf)
install library("sf")
library(sf)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(ggplot2)
library(dplyr)
sf::read_sf('https://services1.arcgis.com/ioennV6PpG5Xodq0/ArcGIS/rest/services/OpenData_S1/FeatureServer/5/query?outFields=*&where=1%3D1&f=geojson'))
sf::read_sf('https://services1.arcgis.com/ioennV6PpG5Xodq0/ArcGIS/rest/services/OpenData_S1/FeatureServer/5/query?outFields=*&where=1%3D1&f=geojson')
(sf::read_sf('https://services1.arcgis.com/ioennV6PpG5Xodq0/ArcGIS/rest/services/OpenData_S1/FeatureServer/5/query?outFields=*&where=1%3D1&f=geojson'))
(sf::read_sf('https://services1.arcgis.com/ioennV6PpG5Xodq0/ArcGIS/rest/services/OpenData_S1/FeatureServer/5/query?outFields=*&where=1%3D1&f=geojson'))
huc_points <- sf::read_sf('https://services1.arcgis.com/ioennV6PpG5Xodq0/ArcGIS/rest/services/OpenData_S1/FeatureServer/5/query?outFields=*&where=1%3D1&f=geojson')
ggplot(huc_points)
(sf::read_sf('https://services1.arcgis.com/ioennV6PpG5Xodq0/ArcGIS/rest/services/OpenData_S1/FeatureServer/5/query?outFields=*&where=1%3D1&f=geojson'))
huc_points <- sf::read_sf('https://services1.arcgis.com/ioennV6PpG5Xodq0/ArcGIS/rest/services/OpenData_S1/FeatureServer/5/query?outFields=*&where=1%3D1&f=geojson' %>% select(OBJECTID, TYPE, DESCRIPTION, JURISDICTION, STREET_NAME, CITY, ZIP, GlobalID))
(sf::read_sf('https://services1.arcgis.com/ioennV6PpG5Xodq0/ArcGIS/rest/services/OpenData_S1/FeatureServer/5/query?outFields=*&where=1%3D1&f=geojson'))
huc_points <- sf::read_sf('https://services1.arcgis.com/ioennV6PpG5Xodq0/ArcGIS/rest/services/OpenData_S1/FeatureServer/5/query?outFields=*&where=1%3D1&f=geojson') %>% select(OBJECTID, TYPE, DESCRIPTION, JURISDICTION, STREET_NAME, CITY, ZIP, GlobalID)
ggplot(huc_points)+geom_sf()
ggplot(huc_points)+geom_sf()+labs(x='labtitude', y='longitude', title = 'hospital')
ggplot(huc_points)+geom_sf()+labs(x='labtitude', y='longitude', title = 'hospital')
ggplot(huc_points)+geom_sf()+labs(x='labtitude', y='longitude', title = 'hospital and urgent cares in Fairfex')
library(tidycensus)
census_api_key(Sys.getenv('census_api_key'))
acs <- data.table::setDT(
tidycensus::get_acs(
state = "VA",
county = '059',
survey = "acs5",
year = 2020,
geography = 'tract',
output = "wide",
variables = 'B01001_001',
geometry = TRUE,
)
)
acs <- st_as_sf(acs)
library(tidycensus)
census_api_key('0e4ce055fa07bd655685e8b6a263b33fb6731de4', install = TRUE,overwrite=TRUE)
acs <- data.table::setDT(
tidycensus::get_acs(
state = "VA",
county = '059',
survey = "acs5",
year = 2020,
geography = 'tract',
output = "wide",
variables = 'B01001_001',
geometry = TRUE,
)
)
acs <- st_as_sf(acs)
# map the geometry
ggplot(data = acs, aes(geometry = geometry)) +
geom_sf() +
labs(x='Latitude', y='Longitude', title='Census tract in Fairfax county')
# plot population by census tract
ggplot(data = acs, aes(geometry = geometry, fill = B01001_001E)) +
geom_sf() +
labs(x='Latitude', y='Longitude', title='Population by Census tract in Fairfax county')
# operation on GIS: assign HCU to census tract
hcu_tract <- st_join(st_transform(acs, 4269), st_transform(huc_points, 4269), join = st_within, left=TRUE )
hcu_tract
hcu_tract <- st_join(st_transform(huc_points, 4269), st_transform(acs, 4269), join = st_within)
hcu_tract
hcu_tract <- hcu_tract %>% group_by(GEOID) %>% summarise(HUC_count=length(OBJECTID)) %>% st_drop_geometry()
hcu_tract
hcu_merge <- merge(acs, hcu_tract, by='GEOID')
# map the number of Hospital and urgent cares facilities by census tracts
ggplot(data = hcu_merge, aes(geometry = geometry, fill = HUC_count)) +
geom_sf() +
labs(x='Latitude', y='Longitude', title='Number of Hospital and Urgent Care Units in Fairfax County')
ggplot(huc_points)+geom_sf()+labs(x='labtitude', y='longitude', title = 'hospital and urgent cares in Fairfex')
# operation on GIS: assign HCU to census tract
hcu_tract <- st_join(st_transform(acs, 4269), st_transform(huc_points, 4269), join = st_within, left=TRUE )
hcu_tract
#hcu_tract <- st_join(st_transform(huc_points, 4269), st_transform(acs, 4269), join = st_within)
#hcu_tract
#hcu_tract <- hcu_tract %>% group_by(GEOID) %>% summarise(HUC_count=length(OBJECTID)) %>% st_drop_geometry()
#hcu_tract
#hcu_merge <- merge(acs, hcu_tract, by='GEOID')
# operation on GIS: assign HCU to census tract
hcu_tract <- st_join(st_transform(acs, 4269), st_transform(huc_points, 4269), join = st_within, left=TRUE )
hcu_tract
hcu_tract <- st_join(st_transform(huc_points, 4269), st_transform(acs, 4269), join = st_within)
hcu_tract
hcu_tract <- hcu_tract %>% group_by(GEOID) %>% summarise(HUC_count=length(OBJECTID)) %>% st_drop_geometry()
hcu_tract
hcu_merge <- merge(acs, hcu_tract, by='GEOID')
# operation on GIS: assign HCU to census tract
hcu_tract <- st_join(st_transform(acs, 4269), st_transform(huc_points, 4269), join = st_within, left=TRUE )
hcu_tract
hcu_tract <- st_join(st_transform(huc_points, 4269), st_transform(acs, 4269), join = st_within)
hcu_tract
hcu_tract <- hcu_tract %>% group_by(GEOID) %>% summarise(HUC_count=length(OBJECTID)) %>% st_drop_geometry()
hcu_tract
hcu_merge <- merge(acs, hcu_tract, by='GEOID')
hcu_merge
install.packages(ipumsr)
install.packages("ipumsr")
knitr::opts_chunk$set(echo = TRUE)
library(ipumsr)
ddi <- read_ipums_ddi("/Users/jianingcai/Documents/ipums/usa_00001.xml")
ddi <- read_ipums_ddi("/Users/jianingcai/Documents/ipums/usa_00001.xml")
data <- read_ipums_micro()
ddi <- read_ipums_ddi("/Users/jianingcai/Documents/ipums/usa_00001.xml")
data <- read_ipums_micro(ddi)
ddi <- read_ipums_ddi("/Users/jianingcai/Documents/ipums/usa_00001.xml")
data <- read_ipums_micro(ddi)
data
View(data)
ddi2 <- read_ipums_ddi("/Users/jianingcai/Documents/ipums/usa_00002.xml")
data2 <- read_ipums_micro(ddi2)
data2
View(data2)
sum(data2.PERWT)
sum(data2_PERWT)
sum(data2$PERWT)
filter_data2 = data2 %>% filter(data2_AGE <= 50)
filter_data2 = data2.filter(data2_AGE <= 50)
filter_data2 = filter(data2_AGE <= 50)
filter_data2 = filter(data2[AGE] <= 50)
filter_data2 = filter(data2_AGE <= 50)
filter_data2 = filter(data2, AGE <= 50)
ddi2 <- read_ipums_ddi("/Users/jianingcai/Documents/ipums/usa_00003.xml")
data2 <- read_ipums_micro(ddi2)
data2
library(dplyr)
filter_data2 = data2 %<% filter(HHINCOME <= 50000)
library(dplyr)
filter_data2 = data2 %>% filter(HHINCOME <= 50000)
his(filter_data2_HHINCOME)
library(dplyr)
library(ggplot)
library(dplyr)
library(ggplot2)
filter_data2 = data2 %>% filter(HHINCOME <= 50000)
his(filter_data2_HHINCOME)
library(dplyr)
library(ggplot2)
filter_data2 = data2 %>% filter(HHINCOME <= 50000)
hist(filter_data2_HHINCOME)
library(dplyr)
library(ggplot2)
filter_data2 = data2 %>% filter(HHINCOME <= 50000)
hist(filter_data2$HHINCOME)
library(dplyr)
library(ggplot2)
filter_data2 = data2 %>% filter(HHINCOME <= 5000000)
hist(filter_data2$HHINCOME)
knitr::opts_chunk$set(echo = TRUE)
library(ipumsr)
library(dplyr)
library(ggplot2)
table(data2$PUMA)
length(unique(data2$PUMA))
length(unique(data2$COUNTYFIP))
ddi = read_ipums_ddi("/Users/jianingcai/Documents/ipums/usa_00006.xml")
data <- read_ipums_micro(ddi)
hist(data$HHINCOME)
filter_data = data %>% filter(HHINCOME <= 5000000)
hist(data$HHINCOME)
filter_data = data %>% filter(HHINCOME <= 5000000)
hist(filter_data$HHINCOME)
filter_data = data %>% filter(HHINCOME <= 3000000)
hist(filter_data$HHINCOME)
filter_data = data %>% filter(HHINCOME <= 2000000)
hist(filter_data$HHINCOME)
filter_data = data %>% filter(HHINCOME <= 1500000)
hist(filter_data$HHINCOME)
count(data$FOODSTMP=="Yes")
filter_data = data %>% filter(HHINCOME <= 1500000)
hist(filter_data$HHINCOME + title = "Income Distribution for Florida")
filter_data = data %>% filter(HHINCOME <= 1500000)
hist(filter_data$HHINCOME + title: "Income Distribution for Florida")
filter_data = data %>% filter(HHINCOME <= 1500000)
hist(filter_data$HHINCOME, title: "Income Distribution for Florida")
filter_data = data %>% filter(HHINCOME <= 1500000)
hist(filter_data$HHINCOME, main: "Income Distribution for Florida")
knitr::opts_chunk$set(echo = TRUE)
library(ipumsr)
library(dplyr)
library(ggplot2)
ddi = read_ipums_ddi("/Users/jianingcai/Documents/ipums/usa_00006.xml")
data <- read_ipums_micro(ddi)
filter_data = data %>% filter(HHINCOME <= 1500000)
hist(filter_data$HHINCOME, main: "Income Distribution for Florida")
filter_data = data %>% filter(HHINCOME <= 1500000)
hist(filter_data$HHINCOME,main: "Income Distribution for Florida")
filter_data = data %>% filter(HHINCOME <= 1500000)
hist(filter_data$HHINCOME,main= "Income Distribution for Florida")
count(data$FOODSTMP "Yes")
data$FOODSTMP
sum(data$FOODSTMP == "Yes")
sum(data$FOODSTMP == "2")
View(data)
length(data$FOODSTMP(data$FOODSTMP == "2"))
nrow(filter(data, FOODSTAMP == "2")),
nrow(filter(data, FOODSTAMP == 2)),
nrow(filter(data, FOODSTAMP == 2))
nrow(filter(data, data$FOODSTAMP == 2))
length(data$FOODSTMP(data$FOODSTMP == 2))
nrow(data[data$FOODSTMP == 2, ])
filter_data = data %>% filter(FOODSTMP==2)
filter_data2 = data %>% filter(FOODSTMP==2)
hist()
filter_data2 = data %>% filter(FOODSTMP==2)
hist(filter_data2$HHINCOME)
filter_data2 = filter_data %>% filter(FOODSTMP==2)
hist(filter_data2$HHINCOME)
filter_data = data %>% filter(HHINCOME <= 2000000)
hist(filter_data$HHINCOME,main= "Income Distribution for Florida")
filter_data2 = filter_data %>% filter(FOODSTMP==2)
hist(filter_data2$HHINCOME)
filter_data2 = filter_data %>% filter(FOODSTMP==2)
hist(filter_data2$HHINCOME, main = "Number of People Receiving Food Stamps vs Income")
filter_data2 = filter_data %>% filter(FOODSTMP==2)
hist(filter_data2$HHINCOME, main = "Number of People Receiving Food Stamps vs Income", ylab = "Num of People",
xlab = "Income")
filter_data2
hist(filter_data2$PUMA)
barplot(filter_data2$PUMA)
barplot(filter_data2$PUMA, xlab = "PUMA")
barplot(x=filter_data2$PUMA, xlab = "PUMA")
barplot(filter_data2$PUMA, xlab = "PUMA")
ggplot(filter_data2, aes(x = cut)) +
geom_bar()
ggplot(filter_data2) +
geom_bar()
ggplot(filter_data2, aes(x="PUMA")) +
geom_bar()
ggplot(filter_data2, aes(x=filter_data2(PUMA))) +
geom_bar()
ggplot(filter_data2, aes(x=factor(PUMA))) +
geom_bar()
ggplot(filter_data2, aes(x=PUMA)) +
geom_bar()
View(filter_data2)
ggplot(filter_data2, aes(x=PUMA)) +
geom_bar()
ggplot(filter_data2, aes(x=factor(PUMA)) +
geom_bar()
ggplot(filter_data2, aes(x=factor(PUMA))) +
geom_bar()
length(unique(filter_data2$PUMA))
knitr::opts_chunk$set(echo = TRUE)
library(ipumsr)
library(dplyr)
library(ggplot2)
ddi = read_ipums_ddi("/Users/jianingcai/Documents/ipums/usa_00007.xml")
data <- read_ipums_micro(ddi)
ddi = read_ipums_ddi("/Users/jianingcai/Documents/ipums/usa_00007.xml")
data <- read_ipums_micro(ddi)
View(data)
library(shiny); runApp('Documents/GitHub/dspg23census/project_web/app1.R')
library(shiny); runApp('web_code.R')
runApp('web_code.R')
